* {
  box-sizing: border-box;
}
html {
  color-scheme: light dark;
}
body {
  // -scrollsnap
  overflow-y: hidden;
  width: 100vw;
  height: 100dvh;
  // -scrollsnap
  margin: 0;
  font-family: system-ui;
  font-size: 18px;
  line-height: 1.5;
  &::after {
    content: "";
    height: 1px;
    width: 100%;
    background-color: aqua;
    position: fixed;
    bottom: 6.25rem;
  }
}

// -scrollsnap body 안쪽을 main으로 한번 더 묶은후 설정값넣음
main {
  width: 100%;
  height: 100%;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
}
// -scrollsnap

.animTrigger {
  position: relative;
  &::after {
    content: "";
    height: 1px;
    width: 100%;
    background-color: fuchsia;
    position: absolute;
    top: 75%;
  }
}

section {
  overflow: hidden;
  // -scrollsnap
  scroll-snap-align: center;
  // -scrollsnap
}

section:nth-child(even) {
  background-color: grey;
}
.wrapper {
  width: min(60ch, 100% - 4rem);
  //   화면을 크게볼때는 60ch가 최대가로값, 화면이 60ch보다 작아질때는 화면을 꽉채운채로 64px의 값이 화면을 채운다
  min-height: max(37.5rem, 100dvh);
  //   창크기가 넉넉할 떄는 100vh값이 화면을 채우고 창이 그보다 작아질 때는 37.5rem을 적용함으로써 화면의 세로길이가 줄어들든 커지든 일정한 간격을 만들 수 있음
  margin-inline: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}
.content {
  border: 1px solid red;
}

// 애니메이션
#section2 {
  .animTarget {
    transform: scale(0);
    transition: transform 500ms ease-out;
  }
  &.triggered {
    .animTarget {
      transform: scale(1);
    }
  }
}
// 텍스트 크기가 커지며 튀어나옴
#section3 {
  .animTarget {
    transform: translateX(100vw);
    transition: transform 500ms ease-out;
  }
  &.triggered {
    .animTarget {
      transform: translateX(0);
    }
  }
}
// 텍스트가 오른쪽에서 튀어나옴

#section4 {
  .content.animTarget {
    transition: background-color 500ms ease-out,
      border 500ms ease-out;
  }
  h2.animTarget {
    transform: translateX(-100vw);
    transition: transform 500ms ease-out;
  }
  p.animTarget {
    transform: translateX(100vw);
    transition: transform 500ms ease-out;
  }
  &.triggered {
    .content.animTarget {
      background-color: cornflowerblue;
      border: 0px solid transparent;
    }
    h2.animTarget {
      transform: translateX(0);
    }
    p.animTarget {
      transform: translateX(0);
    }
  }
}
#section5 {
  .animTarget {
  }
  &.triggered {
    .animTarget {
      animation: wiggle 2s linear infinite;
    }
  }
}

@keyframes wiggle {
  0%,
  7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%,
  100% {
    transform: rotateZ(0);
  }
}
